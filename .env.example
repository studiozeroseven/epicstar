# GitHub-to-OneDev Sync Service - Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit .env to version control!

# =============================================================================
# Application Configuration
# =============================================================================
ENVIRONMENT=development  # Options: development, staging, production
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
APP_NAME=github-onedev-sync
APP_VERSION=1.0.0
APP_PORT=8000

# =============================================================================
# GitHub App Configuration
# =============================================================================
# GitHub App ID (found in GitHub App settings)
GITHUB_APP_ID=

# Webhook secret (generate with: openssl rand -hex 32)
GITHUB_WEBHOOK_SECRET=

# GitHub App private key
# Option 1: Path to private key file
GITHUB_PRIVATE_KEY_PATH=/path/to/github-app-key.pem

# Option 2: Inline private key (base64 encoded or with \n for newlines)
# GITHUB_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----"

# =============================================================================
# OneDev Configuration
# =============================================================================
# OneDev instance URL (no trailing slash)
ONEDEV_API_URL=https://onedev.example.com

# OneDev API token (generate in OneDev user settings)
ONEDEV_API_TOKEN=

# Repository naming strategy
# Format: {prefix}{owner}-{repo}
ONEDEV_REPO_PREFIX=github-

# Conflict resolution strategy when repository already exists
# Options: use_existing, append_timestamp, fail
ONEDEV_CONFLICT_STRATEGY=use_existing

# =============================================================================
# Database Configuration
# =============================================================================
# PostgreSQL connection string (production/staging)
DATABASE_URL=postgresql://syncuser:password@localhost:5432/syncdb

# SQLite connection string (development)
# DATABASE_URL=sqlite:///./dev.db

# Connection pool settings
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20
DATABASE_POOL_RECYCLE=3600  # Recycle connections after 1 hour

# =============================================================================
# Git Operations Configuration
# =============================================================================
# Timeout for git clone operation (seconds)
GIT_CLONE_TIMEOUT=1800  # 30 minutes

# Timeout for git push operation (seconds)
GIT_PUSH_TIMEOUT=1800  # 30 minutes

# Temporary directory for git operations
GIT_TEMP_DIR=/tmp/git-sync

# Clone depth (0 for full clone, >0 for shallow clone)
GIT_CLONE_DEPTH=0

# Git authentication method for OneDev
# Options: https, ssh
GIT_AUTH_METHOD=https

# SSH key path (if using SSH authentication)
# GIT_SSH_KEY_PATH=/path/to/ssh/key

# =============================================================================
# Security Configuration
# =============================================================================
# Rate limiting for webhook endpoint (requests per minute)
WEBHOOK_RATE_LIMIT=100

# Rate limiting for API endpoints (requests per minute)
API_RATE_LIMIT=60

# Enable CORS (for development only)
CORS_ENABLED=false

# Allowed CORS origins (comma-separated)
# CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# Retry Configuration
# =============================================================================
# Maximum number of retry attempts for failed syncs
MAX_RETRIES=3

# Exponential backoff multiplier
RETRY_BACKOFF_FACTOR=2

# Minimum wait time between retries (seconds)
RETRY_MIN_WAIT=4

# Maximum wait time between retries (seconds)
RETRY_MAX_WAIT=60

# =============================================================================
# Monitoring Configuration
# =============================================================================
# Enable Prometheus metrics endpoint
PROMETHEUS_ENABLED=true

# Prometheus metrics port
PROMETHEUS_PORT=9090

# Enable detailed metrics (may impact performance)
DETAILED_METRICS=false

# =============================================================================
# Notification Configuration (Optional)
# =============================================================================
# Enable notifications
NOTIFICATIONS_ENABLED=false

# Notification channels (comma-separated)
# Options: email, slack, discord, webhook
# NOTIFICATION_CHANNELS=email,slack

# Email configuration
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_FROM=noreply@example.com
# SMTP_TO=admin@example.com

# Slack webhook URL
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Discord webhook URL
# DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/WEBHOOK/URL

# Custom webhook URL
# CUSTOM_WEBHOOK_URL=https://your-webhook-endpoint.com

# =============================================================================
# Logging Configuration
# =============================================================================
# Log format (json or text)
LOG_FORMAT=json

# Log file path (leave empty to disable file logging)
LOG_FILE_PATH=./logs/app.log

# Log rotation settings
LOG_MAX_BYTES=10485760  # 10 MB
LOG_BACKUP_COUNT=5

# Enable request logging
REQUEST_LOGGING=true

# Enable SQL query logging (development only)
SQL_LOGGING=false

# =============================================================================
# Feature Flags
# =============================================================================
# Enable un-starring support (delete/archive repos when un-starred)
FEATURE_UNSTAR_SUPPORT=false

# Un-star action (delete or archive)
UNSTAR_ACTION=archive

# Enable batch synchronization
FEATURE_BATCH_SYNC=false

# Enable webhook replay
FEATURE_WEBHOOK_REPLAY=false

# Enable admin API
FEATURE_ADMIN_API=false

# =============================================================================
# Development Configuration
# =============================================================================
# Enable debug mode (development only)
DEBUG=false

# Enable hot reload (development only)
HOT_RELOAD=true

# Use mock external services (for testing)
USE_MOCKS=false

# =============================================================================
# Production Configuration
# =============================================================================
# Number of worker processes (production only)
WORKERS=4

# Worker class (sync or async)
WORKER_CLASS=uvicorn.workers.UvicornWorker

# Keep-alive timeout (seconds)
KEEP_ALIVE=5

# Graceful timeout (seconds)
GRACEFUL_TIMEOUT=30

# =============================================================================
# Backup Configuration
# =============================================================================
# Enable automated database backups
BACKUP_ENABLED=true

# Backup directory
BACKUP_DIR=/backups

# Backup retention (days)
BACKUP_RETENTION_DAYS=30

# Backup schedule (cron format)
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# =============================================================================
# Notes
# =============================================================================
# 1. Generate secure secrets:
#    - Webhook secret: openssl rand -hex 32
#    - Database password: openssl rand -base64 32
#
# 2. For production, use environment variables or secret management:
#    - HashiCorp Vault
#    - AWS Secrets Manager
#    - Azure Key Vault
#    - Google Secret Manager
#
# 3. Never commit this file with actual secrets to version control!
#
# 4. Validate configuration before deployment:
#    python scripts/verify_config.py

