"""Initial database schema

Revision ID: dca192f8577d
Revises: 
Create Date: 2025-10-04 01:54:51.632536

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dca192f8577d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repositories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('github_url', sa.String(length=500), nullable=False),
    sa.Column('github_repo_name', sa.String(length=255), nullable=False),
    sa.Column('github_owner', sa.String(length=255), nullable=False),
    sa.Column('github_full_name', sa.String(length=255), nullable=False),
    sa.Column('github_repo_id', sa.Integer(), nullable=True),
    sa.Column('github_default_branch', sa.String(length=100), nullable=True),
    sa.Column('github_is_private', sa.Boolean(), nullable=True),
    sa.Column('github_size_kb', sa.Integer(), nullable=True),
    sa.Column('onedev_url', sa.String(length=500), nullable=True),
    sa.Column('onedev_repo_name', sa.String(length=255), nullable=True),
    sa.Column('onedev_project_id', sa.Integer(), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('next_retry_at', sa.DateTime(), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repositories_github_owner'), 'repositories', ['github_owner'], unique=False)
    op.create_index(op.f('ix_repositories_github_url'), 'repositories', ['github_url'], unique=True)
    op.create_index(op.f('ix_repositories_id'), 'repositories', ['id'], unique=False)
    op.create_index(op.f('ix_repositories_sync_status'), 'repositories', ['sync_status'], unique=False)
    op.create_table('sync_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('bytes_transferred', sa.Integer(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sync_logs_created_at'), 'sync_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_sync_logs_event_type'), 'sync_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_sync_logs_id'), 'sync_logs', ['id'], unique=False)
    op.create_index(op.f('ix_sync_logs_repository_id'), 'sync_logs', ['repository_id'], unique=False)
    op.create_index(op.f('ix_sync_logs_status'), 'sync_logs', ['status'], unique=False)
    op.create_table('webhook_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.String(length=100), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('delivery_id', sa.String(length=100), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('signature', sa.String(length=100), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('received_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhook_events_event_id'), 'webhook_events', ['event_id'], unique=True)
    op.create_index(op.f('ix_webhook_events_event_type'), 'webhook_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_webhook_events_id'), 'webhook_events', ['id'], unique=False)
    op.create_index(op.f('ix_webhook_events_processed'), 'webhook_events', ['processed'], unique=False)
    op.create_index(op.f('ix_webhook_events_received_at'), 'webhook_events', ['received_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_webhook_events_received_at'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_processed'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_id'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_type'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_id'), table_name='webhook_events')
    op.drop_table('webhook_events')
    op.drop_index(op.f('ix_sync_logs_status'), table_name='sync_logs')
    op.drop_index(op.f('ix_sync_logs_repository_id'), table_name='sync_logs')
    op.drop_index(op.f('ix_sync_logs_id'), table_name='sync_logs')
    op.drop_index(op.f('ix_sync_logs_event_type'), table_name='sync_logs')
    op.drop_index(op.f('ix_sync_logs_created_at'), table_name='sync_logs')
    op.drop_table('sync_logs')
    op.drop_index(op.f('ix_repositories_sync_status'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_id'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_github_url'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_github_owner'), table_name='repositories')
    op.drop_table('repositories')
    # ### end Alembic commands ###

